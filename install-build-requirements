#!/bin/sh
#
# Copyright (c) 2014, Simon J Mudd <sjmudd@pobox.com>. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING. If not, write to the
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston
# MA  02110-1301  USA.
#
# Install devtoolset 1.1 or 2 for CentOS 6 and other build requirements.
#
# Usage: install-build-requirements [<version>]
#
# possible versions: 1.1 2
# default version: 2
#
# This saves typing...
#
[ -n "$DEBUG" ] && set -x
myname=$(basename $0)
myhostname=$(hostname -s)
mydir=$(dirname $0)
[ "$mydir" = . ] && mydir=$PWD

set -e

# standard logging routines
msg_info () {
	echo "$(date +'%b %d %H:%M:%S') $myhostname $myname[$$]: $*"
}

msg_fatal () {
	msg_info "FATAL: $*"
	exit 1
}

version=${1:-2}

msg_info "Attempting to install needed devtoolset-$version packages..."

# if I'm not root then try to run via sudo
if [ "$(id -u)" = 0 ]; then
	msg_info "I'm root so no need for sudo"
	sudo=
else
	msg_info "Will attempt to install devtoolset packages via sudo"
	sudo=sudo
fi

base_url=http://people.centos.org/tru
yum_dir=/etc/yum.repos.d
repo_file=devtools-$version.repo

case $version in
1.1)	packages=devtoolset-1.1 ;;
2)	packages="devtoolset-2-binutils devtoolset-2-gcc devtoolset-2-gcc-c++ devtoolset-2-libstdc++-devel devtoolset-2-runtime" ;;
*)	msg_fatal "Unexpected version $version given" ;;
esac
# Build Requires packages
packages="$packages cmake git libaio-devel ncurses-devel readline-devel rpm-build time zlib-devel"

if test -f $yum_dir/$repo_file; then
	msg_info "OK: $yum_dir/$repo_file already exists"
else
	msg_info "Getting $repo_file from $url/devtools-$version/"
	$sudo wget --quiet $base_url/devtools-$version/$repo_file -O $yum_dir/$repo_file
fi

msg_info "Checking which devtools or build packages may need to be installed..."
needed=
for p in $packages; do
	if rpm -q $p >/dev/null 2>&1; then
		msg_info "OK: $p installed"
	else
		msg_info "ERROR: $p not installed"
		needed="$needed $p"
	fi
done

if [ -n "$needed" ]; then
	msg_info "Installing the following needed build packages: $needed"
	$sudo yum install -y $needed
else
	msg_info "OK: All required build packages are installed"
fi
