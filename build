#!/bin/sh
#
# Copyright (c) 2014, Simon J Mudd <sjmudd@pobox.com>. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING. If not, write to the
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston
# MA  02110-1301  USA.
#
# Build script for WebScaleSQL RPMs.
#
# Usage: build [<webscalesql git directory>]
#
# Will store this as a variable if defined in .webscalerc so it
# can be used on subsequent calls.
#
[ -n "$DEBUG" ] && set -x
myname=$(basename $0)
myhostname=$(hostname -s)
mydir=$(dirname $0)
[ "$mydir" = . ] && mydir=$PWD

set -e

# standard logging routines
msg_info () {
	echo "$(date +'%b %d %H:%M:%S') $myhostname $myname[$$]: $*"
}

msg_fatal () {
	msg_info "FATAL: $*"
	exit 1
}

# build the rpm
build () {
	local rc
	local logfile=$mydir/build.log.$(date +%Y%m%d.%H%M%S)

	# now do the real build.
	msg_info "Logging to $logfile"

	# move to build directory
	cd $specdir

	(
		set -o pipefail
		msg_info "Building webscalesql rpms..."
		MYSQL_BUILD_PATH=$DEVTOOLSET_DIR:$PATH \
		MYSQL_BUILD_CC=$DEVTOOLSET_DIR/gcc \
		MYSQL_BUILD_CXX=$DEVTOOLSET_DIR/c++ \
		rpmbuild -ba --define "distro_specific 1" $specfile 2>&1 | tee -a $logfile
	)

	# check return status
	rc=$?
	test -f $logfile && gzip -9 $logfile
	if [ $rc = 0 ]; then
		msg_info "OK: Build completed successfully"
	else
		msg_fatal "Build failed"
	fi
}

# Copy the local spec file from the webscalesql-rpm directory to rpm's specdir
copy_spec_file () {
	if test -e $specdir/$specfile && cmp -s $specfile $specdir/$specfile; then
		msg_info "OK: spec file $specfile is up to date"
	else
		msg_info "Copying spec file $specfile to $specdir"
		cp -p $specfile $specdir/
	fi
}

# build a tar ball if needed. FIXME check based on version etc.
create_tarball () {
	if test -e $sourcedir/$tarball; then
		msg_info "OK: tar ball $tarball found in $sourcedir"
	else
		# build the tar ball if missing
		msg_info "Creating tar ball $tarball in $sourcedir from ${WSS_HOME}"
		( cd ${WSS_HOME}/.. && tar cz --exclude-vcs -f $sourcedir/$tarball ${WSS_HOME} )
	fi
}

# Check if the version/release needs changing and adjust if needed.
# If changed add a new changelog entry indicating this.
#
# Convert the last webscalesql commit timestamp into a value of the
# form yyyymmdd.hhmmss (FIXME: ignores timezone).
#
# Patch the spec file entry and replace the line below. Note the
# temporary 0. prefix to keep the release number low.
#%global release         0.20140327.145247
patch_spec_file () {
	local ts=$(cd $WSS_HOME && git log --date=iso | head | grep Date: | awk '{ print $2 "." $3 }' | sed -e 's/[-:]//g')
	local spec_ts=$(grep ^%global.release $mydir/$specfile | sed -e 's/%global release[[:space:]]*//')

	if [ 0.$ts = "$spec_ts" ]; then
		msg_info "OK: $mydir/$specfile has the right %global release value: $spec_ts"
		rc=1
	else
		msg_info "Patching $mydir/$specfile with new %global release value: 0.$ts"
		sed -i -e "/^%global release/ s/$spec_ts/0.$ts/" $mydir/$specfile

		patch_changelog $ts
	fi
}

# Patch the spec file's %changelog with the change that has been made.
# fix me and figure out what to put here.
# * Sun Mar 30 2014 Simon J Mudd <sjmudd@pobox.com> <version>-<release>
# - build webscalesql from latest webscalesql commit at $ts
patch_changelog () {
	local current_date=$(date +'%a %b %d %Y')
	local username=$(id -un)
	local myhostname=$(hostname)
	local ts=$1

	msg_info "Adding a new %changelog entry to $mydir/$specfile"
	sed -i -e "
# Add a new changelog entry
/^%changelog/ {
a\\
* $current_date <$username@$myhostname>
a\\
- build $wss from latest $wss commit at $ts
a\\
 
}
" $mydir/$specfile
}

msg_info "WebScaleSQL RPM Builder (C) 2014 Simon J Mudd <sjmudd@pobox.com>"
# Location of devtools bin path
if rpm -q devtoolset-2-gcc >/dev/null 2>&1; then
	DEVTOOLSET_DIR=/opt/rh/devtoolset-2/root/usr/bin
	msg_info "DEVTOOLSET_DIR=$DEVTOOLSET_DIR (Using devtoolset-2 for building)"
elif rpm -q devtoolset-1.1 >/dev/null 2>&1; then
	DEVTOOLSET_DIR=/opt/centos/devtoolset-1.1/root/usr/bin
	msg_info "DEVTOOLSET_DIR=$DEVTOOLSET_DIR (Using devtoolset-1.1 for building)"
else
	msg_info "WARNING WARNING WARNING WARNING WARNING WARNING WARNING" 
	msg_info "WARNING: devtoolset rpm does not seem to be installed."
	msg_info "WARNING: The build of WebScaleSQL may fail."
	msg_info "WARNING WARNING WARNING WARNING WARNING WARNING WARNING" 
	sleep 5
fi

# setup some default values
rcfile=$mydir/.webscalesqlrc

# source rc file if found
test -f $rcfile && . $rcfile

if [ $# = 1 ]; then
	WSS_HOME=$1
	test -d $WSS_HOME ||\
		msg_fatal "Directory $1 not found"
	msg_info "WSS_HOME=$WSS_HOME" > $rcfile
	msg_info "Writing WSS_HOME to $rcfile"
fi

# Check for location of the WebScaleSQL directory
[ -n "$WSS_HOME" ] ||\
	msg_fatal "WSS_HOME (directory of webscalesql git tree) unknown"

wss=webscalesql  # long name, too much typing
wss_version=5.6
tarball=${wss}-${wss_version}.tar.gz
specfile=$wss.spec

# We need to ask rpm for the location of various directories, which
# may depend on how we have setup ~/.rpmmacros. the %{name} substitution
# may be needed depending on usage, otherwise it's a noop.
specdir=$(rpm --eval '%{_specdir}'  | sed "s;%{name};$wss;")
sourcedir=$(rpm --eval '%{_sourcedir}' | sed "s;%{name};$wss;")

msg_info "specdir=$specdir (rpm location of spec files)"
msg_info "sourcedir=$sourcedir (rpm location of source files)"

patch_spec_file
copy_spec_file
create_tarball
build
